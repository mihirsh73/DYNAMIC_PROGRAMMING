class Solution {
public:
   /* int find(string A, int n)
    {
        if(n==0 || n==1)
        {
            return 1;
        }
        if(A[0]=='0') return 0;
        int count=0;
        if(A[n-1]>'0')
        {                            // Recursive solution TC exponential
            count = find(A,n-1);
        }
        if(A[n-2]=='1' || A[n-2]=='2' && A[n-1]<='6')
        {
           count += find(A,n-2);    
        }
        return count;
        
    }*/
    int CountWays(string A){
		   int count[A.size()+1];
		   count[0]=1;
		   count[1]=1;
		   if(A[0]=='0') return 0;
		   for(int i=2; i<=A.size(); i++)
		   {
		       count[i]=0;
		       if(A[i-1]>'0')
		       {
		           count[i]=count[i-1]%1000000007;
		       }
		       if(A[i-2]=='1' || A[i-2]=='2' && A[i-1]<'7')
		       {
		           count[i] += count[i-2]%1000000007;
		       }
		   }
		   return count[A.size()]%1000000007;
};
