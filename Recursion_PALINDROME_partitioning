bool check(string s, int l, int r)
    {
        
        while(l<r)
        {
            if(s[l]!=s[r])
            {
                return false;
            }
            l++;
            r--;
        }
        return true;
    }
    void find(string s, vector<vector<string>> &res, vector<string> res1, int i, int j)
    {
        if(i>=s.size())
        {
            res.push_back(res1);
        }
        for(int k=i; k<=s.size()-1; k++)                                   TC O(N*2^N) SC O(N)
        {
            if(check(s,i,k)==true)
            {
                res1.push_back(s.substr(i,k+1-i));
                find(s,res,res1,k+1,j);
                res1.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>> res;
        vector<string> res1;
        
        int i=0;
        int j= s.size()-1;
        find(s,res,res1,i,j);
        return res;
        
        
        
        
        
    }
