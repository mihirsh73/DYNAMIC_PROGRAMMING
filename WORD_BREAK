int dp[1101];
    int helper(int i, string A, unordered_set<string> st)
    {
        if(i==A.size())
        {
            return 1;
        }
        if(dp[i]!=-1)
        {
            return dp[i];
            
        }
         string temp;
        for(int j=i;j<A.size(); j++)
        {
           
             temp += A[j];
            if(st.find(temp)!=st.end())
            {
                if(helper(j+1,A,st)==1)
                {
                    return dp[i]=1;
                }
            }
        }
        dp[i]=0;
        return dp[i];
    }
    int wordBreak(string A, vector<string> &B) {    // TC O(N^2) SC O(N)
    unordered_set<string> st;
    memset(dp,-1, sizeof(dp));
    for(int i=0; i<B.size(); i++)
    {
        st.insert(B[i]);
    }
    return helper(0,A,st);
    }
