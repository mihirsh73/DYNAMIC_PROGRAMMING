Minimum number of deletions and insertions to transform one string into another
	int minOperations(string str1, string str2) 
	{ 
	    int m= str1.size();
	    int n = str2.size();
	    int L[m + 1][n + 1];
    int i, j;
    int ans =0;

    for (i = 0; i <= m; i++) {
        for (j = 0; j <= n; j++) {
            if (i == 0 || j == 0)
                L[i][j] = 0;
                                                                 TC O(N*M) SC O(N*M)
            else if (str1[i - 1] == str2[j - 1])
                L[i][j] = L[i - 1][j - 1] + 1;
 
            else
                L[i][j] = max(L[i - 1][j], L[i][j - 1]);
        }
    }
 
    // L[m][n] contains length of LCS
    // for X[0..n-1] and Y[0..m-1]
     int len=L[m][n];
      return m-len+n-len;    // m-len for deleting , n-len for adding
	} 
