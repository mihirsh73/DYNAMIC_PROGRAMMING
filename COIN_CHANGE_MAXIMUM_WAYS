Given a value N, find the number of ways to make change for N cents, if we have infinite supply of each of S = { S1, S2, .. , SM } valued coins.
long long int count(int S[], int m, int n) {

     long long int dp[m+1][n+1];
     for(int i=1; i<=m; i++)
     {
         dp[i][0]=1;
     }
     for(int j=1; j<=n; j++)
     {
         dp[0][j]=0;
     }
     dp[0][0]=1;
     for(int i=1; i<=m; i++)
     {
         for(int j=1; j<=n; j++)
         {
             
           
              if(j>=S[i-1])
             {
                 dp[i][j]= dp[i][j-S[i-1]]+ dp[i-1][j];
             }
             else{
                 dp[i][j]= dp[i-1][j];
             }
         }
     }
    
    return dp[m][n];
    }
